{"name": "Test Case: Sauce Demo Hamburger List", "status": "failed", "statusDetails": {"message": "Failed: Hamburger menu list count does not matched. Actual Count = 4, Expected Count = 5", "trace": "self = <tests.test_saucedemo_ui_verification.TestSauceDemoUIVerification object at 0x104201010>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fd90e5ed2baa2b5d9056859b01f61fe5\")>\n\n    @allure.title(\"Test Case: Sauce Demo Hamburger List\")\n    def test_hamburger_menu_list(self, driver):\n        log = cl.custom_logger(logging.INFO)\n        steps = SauceDemoPage(driver)\n        steps.open_saucedemo_website()\n        steps.login_with_username_and_password(\"standard_user\", \"secret_sauce\")\n        steps.click_hamburger_menu()\n>       steps.verify_hamburger_menu_list([\"All Items\", \"About\", \"Logout\", \"Reset App State\", \"Test\"])\n\ntests/test_saucedemo_ui_verification.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.saucedemo_page.SauceDemoPage object at 0x104203b90>\nexpected_hamburger_list = ['All Items', 'About', 'Logout', 'Reset App State', 'Test']\n\n    @allure.step(\"Verify hamburger menu list\")\n    def verify_hamburger_menu_list(self, expected_hamburger_list):\n        actual_hamburger_list = self.wait.until(EC.visibility_of_all_elements_located(self._burger_menu_list))\n        assert len(actual_hamburger_list) == len(expected_hamburger_list), \\\n>           pytest.fail(f\"Hamburger menu list count does not matched. Actual Count = \"\n                        f\"{len(actual_hamburger_list)}, Expected Count = {len(expected_hamburger_list)}\")\nE       Failed: Hamburger menu list count does not matched. Actual Count = 4, Expected Count = 5\n\npages/saucedemo_page.py:125: Failed"}, "steps": [{"name": "Open SauceDemo Website", "status": "passed", "start": 1734181438798, "stop": 1734181438933}, {"name": "Login using username and password", "status": "passed", "parameters": [{"name": "username", "value": "'standard_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1734181438933, "stop": 1734181439677}, {"name": "Click hamburger menu", "status": "passed", "start": 1734181439677, "stop": 1734181439780}, {"name": "Verify hamburger menu list", "status": "failed", "statusDetails": {"message": "Failed: Hamburger menu list count does not matched. Actual Count = 4, Expected Count = 5\n", "trace": "  File \"/Users/jerome/Documents/Code/selenium_python/selenium_python_tests/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/jerome/Documents/Code/selenium_python/selenium_python_tests/pages/saucedemo_page.py\", line 125, in verify_hamburger_menu_list\n    pytest.fail(f\"Hamburger menu list count does not matched. Actual Count = \"\n  File \"/Users/jerome/Documents/Code/selenium_python/selenium_python_tests/.venv/lib/python3.12/site-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "parameters": [{"name": "expected_hamburger_list", "value": "['All Items', 'About', 'Logout', 'Reset App State', 'Test']"}], "start": 1734181439780, "stop": 1734181440315}], "start": 1734181438796, "stop": 1734181440318, "uuid": "55f85e28-fefe-4495-9a89-b8598aebfb84", "historyId": "6e33f16abd2f70eacf723a473b3e9820", "testCaseId": "6e33f16abd2f70eacf723a473b3e9820", "fullName": "tests.test_saucedemo_ui_verification.TestSauceDemoUIVerification#test_hamburger_menu_list", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_saucedemo_ui_verification"}, {"name": "subSuite", "value": "TestSauceDemoUIVerification"}, {"name": "host", "value": "Mac.lan"}, {"name": "thread", "value": "40662-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_saucedemo_ui_verification"}]}